@* 
Code Attribution for Views:
1. How to Use ASP.NET Core Razor Pages Forms with Model Binding — Rick Strahl — https://stackoverflow.com/questions/46781303/asp-net-core-razor-pages-form-post
2. How to Upload Files Using Razor Pages with IFormFile — Serge — https://stackoverflow.com/questions/45854210/asp-net-core-mvc-image-upload-and-display
3. Displaying Validation Messages in ASP.NET Core MVC Views — rynop — https://stackoverflow.com/questions/42083954/how-to-use-data-annotations-for-model-validation-in-asp-net-core
4. How to Use Dropdown Lists and Foreign Keys in ASP.NET Core Views — Smit Patel — https://stackoverflow.com/questions/39422550/ef-core-one-to-many-relationship-example
5. Passing Image URLs and Displaying from Azure Blob Storage in Razor — Gaurav Mantri — https://stackoverflow.com/questions/39282187/getting-sas-token-url-for-azure-blob-storage
*@

@model IEnumerable<EventEase.Models.Venue>

@{
    ViewData["Title"] = "Index";
}

<h1>Venues</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Location)</th>
            <th>@Html.DisplayNameFor(model => model.Capacity)</th>
            <th>@Html.DisplayNameFor(model => model.ImageURL)</th>
            <th>@Html.DisplayNameFor(model => model.IsAvailable)</th>
            <th>Event Type</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Location)</td>
                <td>@Html.DisplayFor(modelItem => item.Capacity)</td>
                <td>
                    @if (!string.IsNullOrEmpty(item.ImageURL))
                    {
                        <img src="@Url.Action("GetImageSasUrl", "Venues", new { blobName = item.ImageURL })"
                             alt="Venue Image"
                             style="width: 100px; height: 100px; object-fit: cover; border-radius: 10px;" />
                    }
                    else
                    {
                        <span>No image</span>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.IsAvailable)</td>
                <td>@(item.EventType ?? "None")</td>
                <td>
                    @if (item.Bookings != null && item.Bookings.Count > 0)
                    {
                        <span class="text-danger">Cannot delete (has bookings)</span>
                    }
                    else
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>

</table>